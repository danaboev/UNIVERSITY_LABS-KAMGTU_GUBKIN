<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestsDataSet" targetNamespace="http://tempuri.org/TestsDataSet.xsd" xmlns:mstns="http://tempuri.org/TestsDataSet.xsd" xmlns="http://tempuri.org/TestsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Tests.Properties.Settings.GlobalReference.Default.TestsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="questionsTableAdapter" GeneratorDataComponentClassName="questionsTableAdapter" Name="questions" UserDataComponentName="questionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestsConnectionString (Settings)" DbObjectName="Tests.dbo.questions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[questions] WHERE (([idQuestions] = @Original_idQuestions) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestions" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[questions] ([Type], [Value1], [Value2]) VALUES (@Type, @Value1, @Value2);
SELECT idQuestions, Type, Value1, Value2 FROM questions WHERE (idQuestions = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Value1" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Value1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Value2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Value2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idQuestions, Type, Value1, Value2 FROM dbo.questions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[questions] SET [Type] = @Type, [Value1] = @Value1, [Value2] = @Value2 WHERE (([idQuestions] = @Original_idQuestions) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)));
SELECT idQuestions, Type, Value1, Value2 FROM questions WHERE (idQuestions = @idQuestions)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Value1" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Value1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Value2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Value2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestions" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idQuestions" ColumnName="idQuestions" DataSourceName="Tests.dbo.questions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idQuestions" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idQuestions" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idQuestions" DataSetColumn="idQuestions" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="Value1" DataSetColumn="ValueQuestion" />
              <Mapping SourceColumn="Value2" DataSetColumn="ValueAnswer" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="resulttestTableAdapter" GeneratorDataComponentClassName="resulttestTableAdapter" Name="resulttest" UserDataComponentName="resulttestTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestsConnectionString (Settings)" DbObjectName="Tests.dbo.resulttest" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[resulttest] WHERE (([idResultTest] = @Original_idResultTest) AND ((@IsNull_idUser = 1 AND [idUser] IS NULL) OR ([idUser] = @Original_idUser)) AND ((@IsNull_idTest = 1 AND [idTest] IS NULL) OR ([idTest] = @Original_idTest)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idResultTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idResultTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[resulttest] ([idUser], [idTest], [DateTesting], [Result]) VALUES (@idUser, @idTest, @DateTesting, @Result);
SELECT idResultTest, idUser, idTest, DateTesting, Result FROM resulttest WHERE (idResultTest = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DateTesting" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DateTesting" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Result" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Result" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idResultTest, idUser, idTest, DateTesting, Result FROM dbo.resulttest</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[resulttest] SET [idUser] = @idUser, [idTest] = @idTest, [DateTesting] = @DateTesting, [Result] = @Result WHERE (([idResultTest] = @Original_idResultTest) AND ((@IsNull_idUser = 1 AND [idUser] IS NULL) OR ([idUser] = @Original_idUser)) AND ((@IsNull_idTest = 1 AND [idTest] IS NULL) OR ([idTest] = @Original_idTest)));
SELECT idResultTest, idUser, idTest, DateTesting, Result FROM resulttest WHERE (idResultTest = @idResultTest)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DateTesting" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DateTesting" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Result" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Result" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idResultTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idResultTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idResultTest" ColumnName="idResultTest" DataSourceName="Tests.dbo.resulttest" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idResultTest" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idResultTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idResultTest" DataSetColumn="idResultTest" />
              <Mapping SourceColumn="idUser" DataSetColumn="idUser" />
              <Mapping SourceColumn="idTest" DataSetColumn="idTest" />
              <Mapping SourceColumn="DateTesting" DataSetColumn="DateTesting" />
              <Mapping SourceColumn="Result" DataSetColumn="Result" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="testsTableAdapter" GeneratorDataComponentClassName="testsTableAdapter" Name="tests" UserDataComponentName="testsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestsConnectionString (Settings)" DbObjectName="Tests.dbo.tests" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tests] WHERE (([idTests] = @Original_idTests) AND ((@IsNull_About = 1 AND [About] IS NULL) OR ([About] = @Original_About)) AND ((@IsNull_idUser = 1 AND [idUser] IS NULL) OR ([idUser] = @Original_idUser)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTests" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTests" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_About" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="About" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_About" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="About" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tests] ([About], [idUser]) VALUES (@About, @idUser);
SELECT idTests, About, idUser FROM tests WHERE (idTests = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@About" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="About" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idTests, About, idUser FROM dbo.tests</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tests] SET [About] = @About, [idUser] = @idUser WHERE (([idTests] = @Original_idTests) AND ((@IsNull_About = 1 AND [About] IS NULL) OR ([About] = @Original_About)) AND ((@IsNull_idUser = 1 AND [idUser] IS NULL) OR ([idUser] = @Original_idUser)));
SELECT idTests, About, idUser FROM tests WHERE (idTests = @idTests)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@About" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="About" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTests" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTests" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_About" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="About" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_About" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="About" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idTests" ColumnName="idTests" DataSourceName="Tests.dbo.tests" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idTests" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idTests" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idTests" DataSetColumn="idTests" />
              <Mapping SourceColumn="About" DataSetColumn="About" />
              <Mapping SourceColumn="idUser" DataSetColumn="idUser" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="testwithquestionsTableAdapter" GeneratorDataComponentClassName="testwithquestionsTableAdapter" Name="testwithquestions" UserDataComponentName="testwithquestionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestsConnectionString (Settings)" DbObjectName="Tests.dbo.testwithquestions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[testwithquestions] WHERE (([idTestWithQuestions] = @Original_idTestWithQuestions) AND ((@IsNull_idQuestion = 1 AND [idQuestion] IS NULL) OR ([idQuestion] = @Original_idQuestion)) AND ((@IsNull_idTest = 1 AND [idTest] IS NULL) OR ([idTest] = @Original_idTest)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTestWithQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTestWithQuestions" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idQuestion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestion" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idQuestion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[testwithquestions] ([idQuestion], [idTest]) VALUES (@idQuestion, @idTest);
SELECT idTestWithQuestions, idQuestion, idTest FROM testwithquestions WHERE (idTestWithQuestions = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idQuestion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idTestWithQuestions, idQuestion, idTest FROM dbo.testwithquestions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[testwithquestions] SET [idQuestion] = @idQuestion, [idTest] = @idTest WHERE (([idTestWithQuestions] = @Original_idTestWithQuestions) AND ((@IsNull_idQuestion = 1 AND [idQuestion] IS NULL) OR ([idQuestion] = @Original_idQuestion)) AND ((@IsNull_idTest = 1 AND [idTest] IS NULL) OR ([idTest] = @Original_idTest)));
SELECT idTestWithQuestions, idQuestion, idTest FROM testwithquestions WHERE (idTestWithQuestions = @idTestWithQuestions)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idQuestion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTestWithQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTestWithQuestions" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idQuestion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestion" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idQuestion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idQuestion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idTestWithQuestions" ColumnName="idTestWithQuestions" DataSourceName="Tests.dbo.testwithquestions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idTestWithQuestions" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idTestWithQuestions" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idTestWithQuestions" DataSetColumn="idTestWithQuestions" />
              <Mapping SourceColumn="idQuestion" DataSetColumn="idQuestion" />
              <Mapping SourceColumn="idTest" DataSetColumn="idTest" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestsConnectionString (Settings)" DbObjectName="Tests.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([idUsers] = @Original_idUsers) AND ((@IsNull_Role = 1 AND [Role] IS NULL) OR ([Role] = @Original_Role)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idUsers" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUsers" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([Name], [SurName], [Login], [Password], [Role]) VALUES (@Name, @SurName, @Login, @Password, @Role);
SELECT idUsers, Name, SurName, Login, Password, Role FROM users WHERE (idUsers = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SurName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SurName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idUsers, Name, SurName, Login, Password, Role FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [Name] = @Name, [SurName] = @SurName, [Login] = @Login, [Password] = @Password, [Role] = @Role WHERE (([idUsers] = @Original_idUsers) AND ((@IsNull_Role = 1 AND [Role] IS NULL) OR ([Role] = @Original_Role)));
SELECT idUsers, Name, SurName, Login, Password, Role FROM users WHERE (idUsers = @idUsers)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SurName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SurName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idUsers" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idUsers" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idUsers" ColumnName="idUsers" DataSourceName="Tests.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idUsers" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idUsers" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idUsers" DataSetColumn="idUsers" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="SurName" DataSetColumn="SurName" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Role" DataSetColumn="Role" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TestsDataSet" msprop:Generator_UserDSName="TestsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="questions" msprop:Generator_TableClassName="questionsDataTable" msprop:Generator_TableVarName="tablequestions" msprop:Generator_RowChangedName="questionsRowChanged" msprop:Generator_TablePropName="questions" msprop:Generator_RowDeletingName="questionsRowDeleting" msprop:Generator_RowChangingName="questionsRowChanging" msprop:Generator_RowEvHandlerName="questionsRowChangeEventHandler" msprop:Generator_RowDeletedName="questionsRowDeleted" msprop:Generator_RowClassName="questionsRow" msprop:Generator_UserTableName="questions" msprop:Generator_RowEvArgName="questionsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idQuestions" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidQuestions" msprop:Generator_ColumnPropNameInRow="idQuestions" msprop:Generator_ColumnPropNameInTable="idQuestionsColumn" msprop:Generator_UserColumnName="idQuestions" type="xs:int" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type" type="xs:int" minOccurs="0" />
              <xs:element name="ValueQuestion" msprop:Generator_ColumnVarNameInTable="columnValueQuestion" msprop:Generator_ColumnPropNameInRow="ValueQuestion" msprop:Generator_ColumnPropNameInTable="ValueQuestionColumn" msprop:Generator_UserColumnName="ValueQuestion" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ValueAnswer" msprop:Generator_ColumnVarNameInTable="columnValueAnswer" msprop:Generator_ColumnPropNameInRow="ValueAnswer" msprop:Generator_ColumnPropNameInTable="ValueAnswerColumn" msprop:Generator_UserColumnName="ValueAnswer" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="resulttest" msprop:Generator_TableClassName="resulttestDataTable" msprop:Generator_TableVarName="tableresulttest" msprop:Generator_RowChangedName="resulttestRowChanged" msprop:Generator_TablePropName="resulttest" msprop:Generator_RowDeletingName="resulttestRowDeleting" msprop:Generator_RowChangingName="resulttestRowChanging" msprop:Generator_RowEvHandlerName="resulttestRowChangeEventHandler" msprop:Generator_RowDeletedName="resulttestRowDeleted" msprop:Generator_RowClassName="resulttestRow" msprop:Generator_UserTableName="resulttest" msprop:Generator_RowEvArgName="resulttestRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idResultTest" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidResultTest" msprop:Generator_ColumnPropNameInRow="idResultTest" msprop:Generator_ColumnPropNameInTable="idResultTestColumn" msprop:Generator_UserColumnName="idResultTest" type="xs:int" />
              <xs:element name="idUser" msprop:Generator_ColumnVarNameInTable="columnidUser" msprop:Generator_ColumnPropNameInRow="idUser" msprop:Generator_ColumnPropNameInTable="idUserColumn" msprop:Generator_UserColumnName="idUser" type="xs:int" minOccurs="0" />
              <xs:element name="idTest" msprop:Generator_ColumnVarNameInTable="columnidTest" msprop:Generator_ColumnPropNameInRow="idTest" msprop:Generator_ColumnPropNameInTable="idTestColumn" msprop:Generator_UserColumnName="idTest" type="xs:int" minOccurs="0" />
              <xs:element name="DateTesting" msprop:Generator_ColumnVarNameInTable="columnDateTesting" msprop:Generator_ColumnPropNameInRow="DateTesting" msprop:Generator_ColumnPropNameInTable="DateTestingColumn" msprop:Generator_UserColumnName="DateTesting" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Result" msprop:Generator_ColumnVarNameInTable="columnResult" msprop:Generator_ColumnPropNameInRow="Result" msprop:Generator_ColumnPropNameInTable="ResultColumn" msprop:Generator_UserColumnName="Result" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tests" msprop:Generator_TableClassName="testsDataTable" msprop:Generator_TableVarName="tabletests" msprop:Generator_RowChangedName="testsRowChanged" msprop:Generator_TablePropName="tests" msprop:Generator_RowDeletingName="testsRowDeleting" msprop:Generator_RowChangingName="testsRowChanging" msprop:Generator_RowEvHandlerName="testsRowChangeEventHandler" msprop:Generator_RowDeletedName="testsRowDeleted" msprop:Generator_RowClassName="testsRow" msprop:Generator_UserTableName="tests" msprop:Generator_RowEvArgName="testsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idTests" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidTests" msprop:Generator_ColumnPropNameInRow="idTests" msprop:Generator_ColumnPropNameInTable="idTestsColumn" msprop:Generator_UserColumnName="idTests" type="xs:int" />
              <xs:element name="About" msprop:Generator_ColumnVarNameInTable="columnAbout" msprop:Generator_ColumnPropNameInRow="About" msprop:Generator_ColumnPropNameInTable="AboutColumn" msprop:Generator_UserColumnName="About" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="idUser" msprop:Generator_ColumnVarNameInTable="columnidUser" msprop:Generator_ColumnPropNameInRow="idUser" msprop:Generator_ColumnPropNameInTable="idUserColumn" msprop:Generator_UserColumnName="idUser" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="testwithquestions" msprop:Generator_TableClassName="testwithquestionsDataTable" msprop:Generator_TableVarName="tabletestwithquestions" msprop:Generator_RowChangedName="testwithquestionsRowChanged" msprop:Generator_TablePropName="testwithquestions" msprop:Generator_RowDeletingName="testwithquestionsRowDeleting" msprop:Generator_RowChangingName="testwithquestionsRowChanging" msprop:Generator_RowEvHandlerName="testwithquestionsRowChangeEventHandler" msprop:Generator_RowDeletedName="testwithquestionsRowDeleted" msprop:Generator_RowClassName="testwithquestionsRow" msprop:Generator_UserTableName="testwithquestions" msprop:Generator_RowEvArgName="testwithquestionsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idTestWithQuestions" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidTestWithQuestions" msprop:Generator_ColumnPropNameInRow="idTestWithQuestions" msprop:Generator_ColumnPropNameInTable="idTestWithQuestionsColumn" msprop:Generator_UserColumnName="idTestWithQuestions" type="xs:int" />
              <xs:element name="idQuestion" msprop:Generator_ColumnVarNameInTable="columnidQuestion" msprop:Generator_ColumnPropNameInRow="idQuestion" msprop:Generator_ColumnPropNameInTable="idQuestionColumn" msprop:Generator_UserColumnName="idQuestion" type="xs:int" minOccurs="0" />
              <xs:element name="idTest" msprop:Generator_ColumnVarNameInTable="columnidTest" msprop:Generator_ColumnPropNameInRow="idTest" msprop:Generator_ColumnPropNameInTable="idTestColumn" msprop:Generator_UserColumnName="idTest" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_RowClassName="usersRow" msprop:Generator_UserTableName="users" msprop:Generator_RowEvArgName="usersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idUsers" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidUsers" msprop:Generator_ColumnPropNameInRow="idUsers" msprop:Generator_ColumnPropNameInTable="idUsersColumn" msprop:Generator_UserColumnName="idUsers" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SurName" msprop:Generator_ColumnVarNameInTable="columnSurName" msprop:Generator_ColumnPropNameInRow="SurName" msprop:Generator_ColumnPropNameInTable="SurNameColumn" msprop:Generator_UserColumnName="SurName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Role" msprop:Generator_ColumnVarNameInTable="columnRole" msprop:Generator_ColumnPropNameInRow="Role" msprop:Generator_ColumnPropNameInTable="RoleColumn" msprop:Generator_UserColumnName="Role" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:questions" />
      <xs:field xpath="mstns:idQuestions" />
    </xs:unique>
    <xs:unique name="resulttest_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:resulttest" />
      <xs:field xpath="mstns:idResultTest" />
    </xs:unique>
    <xs:unique name="tests_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tests" />
      <xs:field xpath="mstns:idTests" />
    </xs:unique>
    <xs:unique name="testwithquestions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:testwithquestions" />
      <xs:field xpath="mstns:idTestWithQuestions" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:idUsers" />
    </xs:unique>
  </xs:element>
</xs:schema>